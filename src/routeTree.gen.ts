/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PlantillasIndexRouteImport } from './routes/plantillas/index'
import { Route as PlantillasCrearRouteImport } from './routes/plantillas/crear'
import { Route as PlantillasEditarSlugRouteImport } from './routes/plantillas/editar.$slug'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlantillasIndexRoute = PlantillasIndexRouteImport.update({
  id: '/plantillas/',
  path: '/plantillas/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlantillasCrearRoute = PlantillasCrearRouteImport.update({
  id: '/plantillas/crear',
  path: '/plantillas/crear',
  getParentRoute: () => rootRouteImport,
} as any)
const PlantillasEditarSlugRoute = PlantillasEditarSlugRouteImport.update({
  id: '/plantillas/editar/$slug',
  path: '/plantillas/editar/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/plantillas/crear': typeof PlantillasCrearRoute
  '/plantillas': typeof PlantillasIndexRoute
  '/plantillas/editar/$slug': typeof PlantillasEditarSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/plantillas/crear': typeof PlantillasCrearRoute
  '/plantillas': typeof PlantillasIndexRoute
  '/plantillas/editar/$slug': typeof PlantillasEditarSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/plantillas/crear': typeof PlantillasCrearRoute
  '/plantillas/': typeof PlantillasIndexRoute
  '/plantillas/editar/$slug': typeof PlantillasEditarSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/plantillas/crear'
    | '/plantillas'
    | '/plantillas/editar/$slug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/plantillas/crear' | '/plantillas' | '/plantillas/editar/$slug'
  id:
    | '__root__'
    | '/'
    | '/plantillas/crear'
    | '/plantillas/'
    | '/plantillas/editar/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PlantillasCrearRoute: typeof PlantillasCrearRoute
  PlantillasIndexRoute: typeof PlantillasIndexRoute
  PlantillasEditarSlugRoute: typeof PlantillasEditarSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plantillas/': {
      id: '/plantillas/'
      path: '/plantillas'
      fullPath: '/plantillas'
      preLoaderRoute: typeof PlantillasIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plantillas/crear': {
      id: '/plantillas/crear'
      path: '/plantillas/crear'
      fullPath: '/plantillas/crear'
      preLoaderRoute: typeof PlantillasCrearRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plantillas/editar/$slug': {
      id: '/plantillas/editar/$slug'
      path: '/plantillas/editar/$slug'
      fullPath: '/plantillas/editar/$slug'
      preLoaderRoute: typeof PlantillasEditarSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PlantillasCrearRoute: PlantillasCrearRoute,
  PlantillasIndexRoute: PlantillasIndexRoute,
  PlantillasEditarSlugRoute: PlantillasEditarSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
